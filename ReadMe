Process: 
mvn clean  deploy 
 --> Build the code, test the code
 --> create executable JAR file (cp means class path)
 ---> Uplaod JAR file to artifactory

pom .xml
     - contains build instructions to create an executable jar file 
     (https://stackoverflow.com/questions/9689793/cant-execute-jar-file-no-main-manifest-attribute)
     - To view JAR file contents
      (jar tf a.tar)
     - Upload to Maven artifactory present in AWS
      (http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/webapp/#/artifacts/browse/tree/General/MyMavenRepo/com/companyname/bank/consumerBanking/1.0-SNAPSHOT/consumerBanking-1.0-20181031.201739-3.jar)
      (https://www.jfrog.com/confluence/display/RTF/Maven+Repository#MavenRepository-ConfiguringAuthentication)
     
     To access Artifactory, in conf/settings.xml of maven folder, use the following credentials
     ================
     <servers>
<server>
<id>central</id>
<username>admin</username>
<password>==================</password>
</server>
<server>
<id>snapshots</id>
<username>admin</username>
<password>====================</password>
</server>
</servers>
<profiles>
<profile>
<repositories>
<repository>
<id>central</id>
<snapshots>
<enabled>false</enabled>
</snapshots>
<name>libs-release</name>
<url>http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/MyMavenRepo</url>
</repository>
<repository>
<id>snapshots</id>
<snapshots />
<name>libs-snapshot</name>
<url>http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/MyMavenRepo</url>
</repository>
</repositories>
</profile>
</profiles>
</settings>


Reference : <servers> <server> <id>central</id> <username>admin</username> <password>kaarthik</password> </server> <server> <id>snapshots</id> <username>admin</username> <password>kaarthik</password> </server> </servers> <profiles> <profile> <repositories> <repository> <id>central</id> <snapshots> <enabled>false</enabled> </snapshots> <name>libs-release</name> <url>http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/libs-release</url> </repository> <repository> <id>snapshots</id> <snapshots /> <name>libs-snapshot</name> <url>http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/libs-release</url> </repository> </repositories> </profile> </profiles> </settings>


3) To check the uploaded artifactory, download JAR file and execute it 
curl -u admin:====== http://ec2-18-224-200-57.us-east-2.compute.amazonaws.com:8081/artifactory/MyMavenRepo/com/companyname/bank/consumerBanking/1.0-SNAPSHOT/consumerBanking-1.0-20181031.201739-3.jar > consumerBanking-1.0-20181031.201739-3.jar
java -jar consumerBanking-1.0-20181031.201739-3.jar

Exepcted Output : Hello World




Note: 
Please create "MyMavenRepo" of "maven type" repository manually in JFROG. The same repo name has to be given
in pom.xml (not required), settings.xml, Jenkins Job file






Integrating Jenkins with Maven
==============================
Main advantage: Instead of saying deployment server information in pom.xml, we are trigering using Jenkins which is configurable unlike
going to pom and change it
1) https://stackoverflow.com/questions/26135427/jenkins-build-issue-maven-home-doesnt-exist
2) https://www.jfrog.com/confluence/display/RTF/Jenkins+Artifactory+Plug-in



Note:
====
Though "MyMavenReleaseRepo" and "MyMavenSnapshotRepo" has been created and configured in Jenknis, ONLY snapshot is created and uploaded
in artifactory. Reason is there is NO GOAL set for release in POM.xml



For autostart jfrog when VM starts
==================================
Make JFrog startup as service in /etc/init.d

Create a file called "my_jfrog_start" and place is in "/etc/init.d" and issue "service my_jfrog_start" command
================== File content ====================
#!/bin/sh -e

nohup /home/ubuntu/myjfrog/artifactory-oss-6.5.2/bin/artifactory.sh & 2>&1
=========================================================

Refer following link on how to creatre SystemD for start and stop service. Best example for tomcat
and can be applied to otehr also
https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-8-on-ubuntu-16-04
